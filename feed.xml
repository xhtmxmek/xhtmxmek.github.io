<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://xhtmxmek.github.io/</id><title>민식이와부</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2024-12-23T15:29:19+09:00</updated> <author> <name>민식이와부</name> <uri>https://xhtmxmek.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://xhtmxmek.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://xhtmxmek.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2024 민식이와부 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>레이어드 머티리얼 만들기</title><link href="https://xhtmxmek.github.io/posts/layeredMaterialPractice/" rel="alternate" type="text/html" title="레이어드 머티리얼 만들기" /><published>2024-11-04T00:00:00+09:00</published> <updated>2024-11-04T00:00:00+09:00</updated> <id>https://xhtmxmek.github.io/posts/layeredMaterialPractice/</id> <content src="https://xhtmxmek.github.io/posts/layeredMaterialPractice/" /> <author> <name>민식이와부</name> </author> <category term="Unreal Engine" /> <category term="material" /> <summary> 출처 : ue5 레이어드 머티리얼 만들기 두개의 머티리얼 레이어(함수) 만들기. Chrome, Snow를 나타내는 레이어 두 머티리얼을 마스터 머티리얼에서 혼합 머티리얼 인스턴스로 파라미터 값을 조정. 시작용 컨텐츠에 있는 의자 메쉬에 입혀서 최종 출력 </summary> </entry> <entry><title>머티리얼 레이어</title><link href="https://xhtmxmek.github.io/posts/MaterialLayer/" rel="alternate" type="text/html" title="머티리얼 레이어" /><published>2024-11-04T00:00:00+09:00</published> <updated>2024-11-04T00:00:00+09:00</updated> <id>https://xhtmxmek.github.io/posts/MaterialLayer/</id> <content src="https://xhtmxmek.github.io/posts/MaterialLayer/" /> <author> <name>민식이와부</name> </author> <category term="Unreal Engine" /> <category term="material" /> <summary> 출처 : ue5 머티리얼 레이어 레이어드 머티리얼과 유사하지만 더 간단하고 유연성이 좋다. 기존 레이어드 머티리얼은 머티리얼 노드 그래프에서 직접 수정헀어야 되지만, 머티리얼 레이어에서는 아티스트가 머티리얼 인스턴스 에디터 탭에서 빠르고 쉽게 인스턴스 레이어를 교체할 수 있다. 이 워크플로를 사용하면 머티리얼 레이어가 인스턴스 에디터에 노출되므로 레이어드 머티리얼을 커스터마이징하는데 필요한 기술적 지식과 시간이 크게 감소한다. 주요 장점 머티리얼 레이어의 주요 장점 중 하나는 복잡성을 줄여주고 편집이 쉽게 해준다. 기존 머티리얼이나 레이어드 머티리얼로 만들 수 있는 로직을 유연하고, 덜 복잡하고, 쉽게 제어할 수 있게 된다. 아래의 그림은 그래프 기반 접근법의 기존 레이어드 머티리얼과 GUI... </summary> </entry> <entry><title>레이어드 머티리얼</title><link href="https://xhtmxmek.github.io/posts/MaterialLayer/" rel="alternate" type="text/html" title="레이어드 머티리얼" /><published>2024-10-30T00:00:00+09:00</published> <updated>2024-11-04T13:34:35+09:00</updated> <id>https://xhtmxmek.github.io/posts/MaterialLayer/</id> <content src="https://xhtmxmek.github.io/posts/MaterialLayer/" /> <author> <name>민식이와부</name> </author> <category term="Unreal Engine" /> <category term="material" /> <summary> 참고: ue5 레이어드 머티리얼 개요 레이어드 머티리얼(Layered Materials) 은 일련의 서브 머티리얼(레이어)이 포함된 머티리얼을 만든 다음 마스크와 같은 픽셀당 연산으로 오브젝트의 표면에 배치할 수 있다. 표면의 복잡한 블렌딩을 처리하는데 적합. 아래 이미지에서 가장 오른쪽의 로켓은 크롬, 알류미늄, 구리 부분에 별도의 레이어를 사용했음. 머티리얼에서 픽셀 단위로 블렌딩. 왼쪽 세개는 레이어 없이 단일 재질. 레이어드 머티리얼 기능은 머티리얼 함수의 확장. 머티리얼 함수 내에서 Make Material Attruibutes와 Break Material Attribute 노드를 사용하여 출력. 베이스 머티리얼에서 이 함수를 호출하여 레이어 블렌드 사용하여 블렌딩. 위 이미... </summary> </entry> <entry><title>RealTimeRendering</title><link href="https://xhtmxmek.github.io/posts/rtr/" rel="alternate" type="text/html" title="RealTimeRendering" /><published>2024-10-02T00:00:00+09:00</published> <updated>2024-10-02T00:00:00+09:00</updated> <id>https://xhtmxmek.github.io/posts/rtr/</id> <content src="https://xhtmxmek.github.io/posts/rtr/" /> <author> <name>민식이와부</name> </author> <category term="Graphics_3D" /> <category term="Real Time Rendering" /> <summary> 3장 그래픽 처리 장치 모든 처리가 해결해야 하는 문제는 지연(latency)이다. 기본 개념은 처리할 정보가 처리장치에서 멀어질수록 대기 시간이 길어진다.(예를 들어 컴퓨트 셰이더의 경우, 장치메모리 &amp;gt; 공유 메모리 &amp;gt; 레지스터 순으로 속도가 빨라진다). 데이터 검색을 기다려서 처리장치가 정지 대기(stall)가 되어 성능이 떨어지는 것이 요점이다. 데이터 병렬 아키텍처 CPU는 제한된 SIMD 벡터 처리를 제외하고는 대부분 직렬 방식으로 실행. 캐시나 분기예측 등으로 정지 대기를 방지함. GPU는 CPU와 다르게 수천개의 코어로 이루어져 있음. 대규묘 유사한 데이터 집합을 병렬로 처리함. cpu와 다르게 캐시 메모리와 제어 로직 전용 칩 영역이 적어서 지연 시간이 cpu보다 높다. ... </summary> </entry> <entry><title>Ustruct</title><link href="https://xhtmxmek.github.io/posts/ustruct/" rel="alternate" type="text/html" title="Ustruct" /><published>2024-07-12T00:00:00+09:00</published> <updated>2024-07-12T00:00:00+09:00</updated> <id>https://xhtmxmek.github.io/posts/ustruct/</id> <content src="https://xhtmxmek.github.io/posts/ustruct/" /> <author> <name>민식이와부</name> </author> <summary> </summary> </entry> </feed>
